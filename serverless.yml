org: githiago
app: pessoas-api
service: pessoas-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.tableName}
  environment:
    REDIS_PORT: !GetAtt RedisEndpoint.Port
    REDIS_HOST: !GetAtt RedisEndpoint.Address

plugins:
  - serverless-dynamodb
  - serverless-offline

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage, 'dev'}
  # Set the table name here so we can use it while testing locally
  tableName: pessoas

  serverless-dynamodb:
    start:
      migrate: true
    port: 8000
    docker: false


functions:
  cacheTest:
    handler: src/lambdas/cached/handler.handler
    vpc:
      securityGroupIds:
        - !Ref ElastiCacheSG
      subnetIds:
        # TODO
    environment:
      STAGE: ${self:custom.stage}
    events:
      - httpApi:
          path: /cache-test
          method: GET

resources:
  Resources:
    CacheVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/16
        EnableDnsSupport: 'true'
        EnableDnsHostnames: 'true'
        # TODO
    ElastiCacheSG:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Elasticache Security Group
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            IpProtocol: '-1'
            FromPort: '0'
            ToPort: ${self:provider.environment.REDIS_PORT}
        VpcId: !Ref CacheVPC
        # TODO
    RedisCache:
      Type: 'AWS::ElastiCache::CacheCluster'
      Properties:
        Engine: redis
        ClusterName: redis-lambda-elasticache
        CacheNodeType: cache.t2.micro
        NumCacheNodes: 1
        AZMode: single-az
        VpcSecurityGroupIds:
          - !GetAtt ElastiCacheSG.GroupId
